{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfre\\\\Desktop\\\\React\\\\test-challenge-app\\\\src\\\\ChallengeApp.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ChallengeApp.css';\nimport { MovieList } from './MovieList';\nexport const ChallengeApp = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [buttonValue, setButtonValue] = useState('View Favorites');\n  const [OnlyFavorites, setOnlyFavorites] = useState(false);\n  const [MoviesArray, setMoviesArray] = useState([]);\n  const lista = [];\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n    const l = MoviesArray.filter(m => m.name.indexOf(e.target.value) > 0);\n    console.log(l);\n  };\n\n  const handleButtonClick = e => {\n    setButtonValue(OnlyFavorites ? 'View Favorites' : 'View All');\n    setOnlyFavorites(!OnlyFavorites);\n  };\n\n  const getMovies = async () => {\n    const url = 'http://api.tvmaze.com/shows';\n    const resp = await fetch(url);\n    const data = await resp.json();\n    lista = data.map(mv => {\n      return {\n        id: mv.id,\n        name: mv.name,\n        language: mv.language,\n        image: mv.image.medium,\n        summary: mv.summary,\n        officialSite: mv.officialSite,\n        premiered: mv.premiered\n      };\n    }); //setMoviesArray(list);\n\n    console.log(lista);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"My TV Shows\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search\",\n    placeholder: \"Type to filter...\",\n    type: \"text\",\n    value: inputValue,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: buttonValue,\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    movies: MoviesArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/alfre/Desktop/React/test-challenge-app/src/ChallengeApp.js"],"names":["React","useState","useEffect","MovieList","ChallengeApp","inputValue","setInputValue","buttonValue","setButtonValue","OnlyFavorites","setOnlyFavorites","MoviesArray","setMoviesArray","lista","getMovies","handleInputChange","e","target","value","l","filter","m","name","indexOf","console","log","handleButtonClick","url","resp","fetch","data","json","map","mv","id","language","image","medium","summary","officialSite","premiered"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport './ChallengeApp.css';\r\nimport { MovieList } from './MovieList';\r\n\r\n\r\nexport const ChallengeApp = () => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [buttonValue, setButtonValue] = useState('View Favorites');\r\n    const [OnlyFavorites, setOnlyFavorites] = useState(false);\r\n    const [MoviesArray, setMoviesArray] = useState([]);\r\n    const lista = [];\r\n\r\n    useEffect( () => {\r\n        getMovies();\r\n    }, [] )\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n        const l = MoviesArray.filter(m => m.name.indexOf(e.target.value)>0);\r\n        \r\n        console.log(l);\r\n    }\r\n\r\n    const handleButtonClick = (e) => {\r\n        setButtonValue(OnlyFavorites ? 'View Favorites': 'View All');\r\n        setOnlyFavorites(!OnlyFavorites)\r\n    }\r\n\r\n    const getMovies = async() => {\r\n        const url = 'http://api.tvmaze.com/shows';\r\n        const resp = await fetch(url);\r\n        const data = await resp.json();\r\n\r\n        lista = data.map ( mv => {\r\n            return {\r\n                id: mv.id,\r\n                name: mv.name,\r\n                language: mv.language,\r\n                image: mv.image.medium,\r\n                summary: mv.summary,\r\n                officialSite: mv.officialSite,\r\n                premiered: mv.premiered\r\n            }\r\n        });\r\n\r\n        //setMoviesArray(list);\r\n        console.log(lista);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>My TV Shows</h1>\r\n            <input className=\"search\" placeholder=\"Type to filter...\" type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <br />\r\n            <input type=\"button\" \r\n                    value= {buttonValue}\r\n                    onClick= {handleButtonClick} />\r\n            <MovieList movies={MoviesArray}/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}